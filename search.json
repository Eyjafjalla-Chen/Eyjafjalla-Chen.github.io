[{"title":"Markdown","url":"/2020/04/15/Markdown/","content":"\nMarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。Markdown 编写的文档后缀为 .md, .markdown。\n\n\n\n标题👆 看起来就像上面这个。Markdown 标题有两种格式。\n使用 = 和 - 标记一级和二级标题= 和 - 标记语法格式如下：\n我展示的是一级标题=================我展示的是二级标题-----------------\n\n使用 # 号标记使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。\n# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题\n\n段落样式Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。当然也可以在段落后面使用一个空行来表示重新开始一个段落。\n字体Markdown 可以使用以下几种字体：\n\n斜体文本粗体文本粗斜体文本\n\n*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___\n\n分隔线可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n\n我\n\n裂\n\n开\n\n了\n\n\n**** * ******- - -----------\n\n删除线如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\nRUNOOB.COMGOOGLE.COMBAIDU.COM\n\nRUNOOB.COMGOOGLE.COM~~BAIDU.COM~~\n\n下划线下划线可以通过 HTML 的 &lt;u&gt; 标签来实现：\n\n带下划线文本\n\n&lt;u&gt;带下划线文本&lt;/u&gt;\n\n脚注脚注是对文本的补充说明。Markdown 脚注的格式如下:\n[^要注明的文本]\n以下实例演示了脚注的用法：\n\n阿米娅^阿米娅\n\n创建脚注格式类似这样 [^阿米娅][^阿米娅]: 博士，您还有很多事情需要处理。现在还不能休息哦。\n\nMarkdown 列表Markdown 支持有序列表和无序列表。无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：\n\n\n第一项\n第二项\n第三项\n\n\n* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项\n有序列表使用数字并加上 . 号来表示，如：\n\n\n第一项\n第二项\n第三项\n\n\n1. 第一项2. 第二项3. 第三项\n\n列表嵌套列表嵌套只需在子列表中的选项添加四个空格即可：\n\n第一项：\n第一项嵌套的第一个元素\n第一项嵌套的第二个元素\n\n\n第二项：\n第二项嵌套的第一个元素\n第二项嵌套的第二个元素\n\n\n\n1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素\n\nMarkdown 区块Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：\n\n这是一个区块\n\n&gt; 这是一个区块\n另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：\n\n最外层\n\n第一层嵌套\n\n第二层嵌套\n\n\n\n&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套\n\n区块中使用列表区块中使用列表实例如下：\n\n区块中使用列表\n\n第一项\n第二项\n\n\n第一项\n第二项\n第三项\n\n\n&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项\n\n列表中使用区块如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。区块中使用列表实例如下：\n\n第一项\n菜鸟教程学的不仅是技术更是梦想\n\n\n第二项\n\n* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项\n\nMarkdown 代码如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：printf() 函数\n`printf()` 函数\n代码区块代码区块使用 4 个空格或者一个制表符（Tab 键）。也可以用 &#96;&#96;&#96; 包裹一段代码，并指定一种语言（也可以不指定）：实例如下：\n$(document).ready(function () &#123;    alert(&#x27;RUNOOB&#x27;);&#125;);\n\nMarkdown 链接链接使用方法如下：\n\n链接名称或者直接使用链接地址https://github.com/Yue-plus\n\n[链接名称](链接地址)&lt;https://github.com/Yue-plus&gt;\n\n高级链接可以通过变量来设置一个链接，变量赋值在文档末尾进行：\n\n这个链接用 1 作为网址变量 Google这个链接用 mysite 作为网址变量 Yue_plus\n\n这个链接用 1 作为网址变量 [Google][1]这个链接用 mysite 作为网址变量 [Yue_plus][mysite]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [mysite]: https://github.com/Yue-plus\n\nMarkdown 图片Markdown 图片语法格式如下：\n![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)\n开头一个感叹号 !接着一个方括号，里面放上图片的替代文字接着一个英文括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。\n\n\n\n![罗德岛集结](https://ak.hypergryph.com/upload/images/20190228/118078295785f64dac736c6ade50bb76.jpg &quot;罗德岛集结&quot;)\n当然，你也可以像网址那样对图片网址使用变量:\n这个链接用 `2` 作为网址变量 [凯尔希][2].然后在文档的结尾为变量赋值（网址）[2]: https://ak.hypergryph.com/upload/images/20190228/143666074a406ecaa6cd4271dc7c5127.jpg\nMarkdown 还没有办法指定图片的高度与宽度，如果需要的话，也可以使用普通的 &lt;img&gt; 标签。\n\n&lt;img src=&quot;https://ak.hypergryph.com/assets/index/images/ak/common/story/item_infected.png&quot; width=&quot;200px&quot;&gt;\n\nMarkdown 表格Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。语法格式如下：\n\n\n\n表头\n表头\n\n\n\n单元格\n单元格\n\n\n单元格\n单元格\n\n\n|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |\n\n可以设置表格的对齐方式：\n-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。\n\n\n\n左对齐\n右对齐\n居中对齐\n\n\n\n单元格\n单元格\n单元格\n\n\n单元格\n单元格\n单元格\n\n\nMarkdown 高级技巧##支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等，如：\n\n使用 Ctrl+Alt+Del 重启电脑\n\n使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑\n\n转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n\n** 正常显示星号 **\n\n**文本加粗** \\*\\* 正常显示星号 \\*\\*\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\\   反斜线`   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号\n\n数学公式当需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n\n参考 使用 hexo-filter-mathjax 过滤器来显示数学公式\n\n\n可以在行内包含数学公式： $i\\hbar\\frac{\\partial}{\\partial t}\\psi&#x3D;-\\frac{\\hbar^2}{2m}\\nabla^2\\psi+V\\psi$ 注意单 $ 内部不能有空格！$$\\begin{eqnarray*}\\nabla\\cdot\\vec{E}&amp;&#x3D;&amp;\\frac{\\rho}{\\epsilon_0}\\\\\\nabla\\cdot\\vec{B}&amp;&#x3D;&amp;0\\\\\\nabla\\times\\vec{E}&amp;&#x3D;&amp;-\\frac{\\partial B}{\\partial t}\\\\\\nabla\\times\\vec{B}&amp;&#x3D;&amp;\\mu_0\\left(\\vec{J}+\\epsilon_0\\frac{\\partial E}{\\partial t}\\right)\\\\\\end{eqnarray*}$$\n\n可以在行内包含数学公式： $i\\hbar\\frac&#123;\\partial&#125;&#123;\\partial t&#125;\\psi=-\\frac&#123;\\hbar^2&#125;&#123;2m&#125;\\nabla^2\\psi+V\\psi$ 注意单 `$` 内部不能有空格！$$\\begin&#123;eqnarray\\*&#125;\\nabla\\cdot\\vec&#123;E&#125;&amp;=&amp;\\frac&#123;\\rho&#125;&#123;\\epsilon_0&#125;\\\\\\\\\\nabla\\cdot\\vec&#123;B&#125;&amp;=&amp;0\\\\\\\\\\nabla\\times\\vec&#123;E&#125;&amp;=&amp;-\\frac&#123;\\partial B&#125;&#123;\\partial t&#125;\\\\\\\\\\nabla\\times\\vec&#123;B&#125;&amp;=&amp;\\mu_0\\left(\\vec&#123;J&#125;+\\epsilon_0\\frac&#123;\\partial E&#125;&#123;\\partial t&#125;\\right)\\\\\\\\\\end&#123;eqnarray\\*&#125;$$\n\n","categories":["教程"],"tags":["Markdown"]},{"title":"MySQL","url":"/2025/04/18/MySQL/","content":"\nMySQL是最流行的关系型数据库管理系统之一。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，其体积小、速度快、总体拥有成本低。MySQL使用 C和 C++编写，并使用了多种编译器进行测试，保证了源代码的可移植性。\n\n\nMySQL命令SQL 在线测试工具 | 菜鸟工具SQL 教程 | 菜鸟教程\n基础命令连接到 MySQL 数据库： mysql -u 用户名 -p查看所有数据库： SHOW DATABASES;选择一个数据库： USE 数据库名;查看所有表： SHOW TABLES;查看表结构： DESCRIBE 表名; 或 SHOW COLUMNS FROM 表名;创建一个新数据库： CREATE DATABASE 数据库名;删除一个数据库： DROP DATABASE 数据库名;创建一个新表： CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);删除一个表： DROP TABLE 表名;插入数据： INSERT INTO 表名 (列1, 列2, ...) VALUES (值1, 值2, ...);查询数据： SELECT 列1, 列2, ... FROM 表名 WHERE 条件;更新数据： UPDATE 表名 SET 列1 = 值1, 列2 = 值2, ... WHERE 条件;删除数据： DELETE FROM 表名 WHERE 条件;创建用户： CREATE USER &#39;用户名&#39;@&#39;主机&#39; IDENTIFIED BY &#39;密码&#39;;授权用户： GRANT 权限 ON 数据库名.* TO &#39;用户名&#39;@&#39;主机&#39;;刷新权限： FLUSH PRIVILEGES;查看当前用户： SELECT USER();退出 MySQL： EXIT; \n数据库命令创建数据库： CREATE DATABASE 数据库名;删除数据库： DROP DATABASE 数据库名;修改数据库编码格式和排序规则： ALTER DATABASE 数据库名 DEFAULT CHARACTER SET 编码格式 DEFAULT COLLATE 排序规则;查看所有数据库： SHOW DATABASES;查看数据库详细信息： SHOW CREATE DATABASE 数据库名;选择数据库： USE 数据库名;查看数据库的状态信息： SHOW STATUS;查看数据库的错误信息： SHOW ERRORS;查看数据库的警告信息： SHOW WARNINGS;查看数据库的表： SHOW TABLES;查看表的结构： DESC 表名;查看表的结构： DESCRIBE 表名;查看表的结构： SHOW COLUMNS FROM 表名;查看表的结构： EXPLAIN 表名;创建表： CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);删除表： DROP TABLE 表名;修改表结构： ALTER TABLE 表名 ADD 列名 数据类型 [约束];修改表结构： ALTER TABLE 表名 DROP 列名;修改表结构： ALTER TABLE 表名 MODIFY 列名 数据类型 [约束];查看表的创建 SQL： SHOW CREATE TABLE 表名; \n数据表命令创建表： CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);删除表： DROP TABLE 表名;修改表结构（添加列）： ALTER TABLE 表名 ADD 列名 数据类型 [约束];修改表结构（删除列）： ALTER TABLE 表名 DROP 列名;修改表结构（修改列）： ALTER TABLE 表名 MODIFY 列名 数据类型 [约束];修改表结构（重命名列）： ALTER TABLE 表名 CHANGE 旧列名 新列名 数据类型 [约束];查看表结构： DESC 表名;查看表结构： DESCRIBE 表名;查看表结构： SHOW COLUMNS FROM 表名;查看表结构： EXPLAIN 表名;查看表的创建 SQL： SHOW CREATE TABLE 表名;查看表中的所有数据： SELECT * FROM 表名;插入数据： INSERT INTO 表名 (列1, 列2, ...) VALUES (值1, 值2, ...);更新数据： UPDATE 表名 SET 列1 = 值1, 列2 = 值2, ... WHERE 条件;删除数据： DELETE FROM 表名 WHERE 条件;查看表的索引： SHOW INDEX FROM 表名;创建索引： CREATE INDEX 索引名 ON 表名 (列名);删除索引： DROP INDEX 索引名 ON 表名;查看表的约束： SHOW CREATE TABLE 表名; (约束信息会包含在创建表的 SQL 中)查看表的统计信息： SHOW TABLE STATUS LIKE &#39;表名&#39;; \n事务命令开始事务： START TRANSACTION; 或 BEGIN;提交事务： COMMIT;回滚事务： ROLLBACK;查看当前事务的状态： SHOW ENGINE INNODB STATUS; (可查看 InnoDB 存储引擎的事务状态)锁定表以进行事务操作： LOCK TABLES 表名 WRITE; 或 LOCK TABLES 表名 READ;释放锁定的表： UNLOCK TABLES;设置事务的隔离级别： SET TRANSACTION ISOLATION LEVEL READ COMMITTED;设置事务的隔离级别： SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;设置事务的隔离级别： SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;设置事务的隔离级别： SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; \nMySQL数值类型MySQL数值类型\n\n\n类型\n大小\n范围（有符号）\n范围（无符号）\n用途\n\n\n\nTINYINT\n1 Byte\n(-128, 127)\n(0, 255)\n小整数值\n\n\nSMALLINT\n2 Bytes\n(-32 768, 32 767)\n(0, 65 535)\n大整数值\n\n\nMEDIUMINT\n3 Bytes\n(-8 388 608, 8 388 607)\n(0, 16 777 215)\n大整数值\n\n\nINT&#x2F;INTEGER\n4 Bytes\n(-2 147 483 648, 2 147 483 647)\n(0, 4 294 967 295)\n大整数值\n\n\nBIGINT\n8 Bytes\n(-9 223 372 036 854 775 808, 9 223 372 036 854 775 807)\n(0, 18 446 744 073 709 551 615)\n极大整数值\n\n\nFLOAT\n4 Bytes\n(-3.402 823 466 E+38, -1.175 494 351 E-38), 0, (1.175 494 351 E-38, 3.402 823 466 E+38)\n0, (1.175 494 351 E-38, 3.402 823 466 E+38)\n单精度浮点数值\n\n\nDOUBLE\n8 Bytes\n(-1.797 693 134 862 315 7 E+308, -2.225 073 858 507 201 4 E-308), 0, (2.225 073 858 507 201 4 E-308, 1.797 693 134 862 315 7 E+308)\n0, (2.225 073 858 507 201 4 E-308, 1.797 693 134 862 315 7 E+308)\n双精度浮点数值\n\n\nDECIMAL\n对 DECIMAL(M,D)，如果 M&gt;D，为 M+2 否则为 D+2\n依赖于 M 和 D 的值\n依赖于 M 和 D 的值\n小数值\n\n\n时间和日期类型\n\n\n类型\n大小 (Bytes)\n范围\n格式\n用途\n\n\n\nDATE\n3\n1000-01-01 到 9999-12-31\nYYYY-MM-DD\n日期值\n\n\nTIME\n3\n‘-838:59:59’ 到 ‘838:59:59’\nHH:MM:SS\n时间值或持续时间\n\n\nYEAR\n1\n1901 到 2155\nYYYY\n年份值\n\n\nDATETIME\n8\n1000-01-01 00:00:00 到 9999-12-31 23:59:59\nYYYY-MM-DD hh:mm:ss\n混合日期和时间值\n\n\nTIMESTAMP\n4\n1970-01-01 00:00:01 UTC 到 2038-01-19 03:14:07 UTC\nYYYY-MM-DD hh:mm:ss\n混合日期和时间值，时间戳\n\n\n字符串类型\n\n\n类型\n大小\n用途\n\n\n\nCHAR\n0-255 bytes\n定长字符串\n\n\nVARCHAR\n0-65535 bytes\n变长字符串\n\n\nTINYBLOB\n0-255 bytes\n不超过 255 个字符的二进制字符串\n\n\nTINYTEXT\n0-255 bytes\n短文本字符串\n\n\nBLOB\n0-65 535 bytes\n二进制形式的长文本数据\n\n\nTEXT\n0-65 535 bytes\n长文本数据\n\n\nMEDIUMBLOB\n0-16 777 215 bytes\n二进制形式的中等长度文本数据\n\n\nMEDIUMTEXT\n0-16 777 215 bytes\n中等长度文本数据\n\n\nLONGBLOB\n0-4 294 967 295 bytes\n二进制形式的极大文本数据\n\n\nLONGTEXT\n0-4 294 967 295 bytes\n极大文本数据\n\n\n注意：char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。\n\n\n\n\n枚举与集合类型\nENUM: 枚举类型，用于存储单一值，可以选择一个预定义的集合。\nSET: 集合类型，用于存储多个值，可以选择多个预定义的集合。\n\n空间数据类型GEOMETRY, POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON, GEOMETRYCOLLECTION: 用于存储空间数据（地理信息、几何图形等）。\n","categories":["教程"],"tags":["MySQL"]},{"title":"加密文件！","url":"/2222/02/22/%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/","content":"\n      \n        1964f5d9cf3f6a70ff71afb562def0ad262529af5ab0afc360bf3c769c493907d5de380c4776cd43f80c7aa298a8164e50776550d2f84de89982254a9e998c6841afd07092e233637c602cda0d391720f66b02fc1622446898867ab8148402422581e25ca94d9a175d58c2851eba6ab3e226369c39d91e3457215875b160b54d55bcd1aa13635b59b0321d5014d22535286b7b852ae22b656fae94b30bd7b88d61cef65d5c5b10fdc2f437c7b0f88700dacd3b9c7d31e5fac77c1ff9c049a8e5759cd559dbb4efac3f8e0af958bc2118382b227392f0910de70fc5307a9a0ecf4c8f09e4dfd3f161d1637be63d37a4ae4fdfc64721f6c818a2c999a0f4bdbb228ce72173b1c0be0b4080d90f6766e7b3761bdf5ffd41e414f1efb129b6e298d5b7081bb78732fc37bdbe8f4f6554bf05be44bae3e68e254fa664afa96fde6f40ac394489e42bcaaa9c70eeb953fb2e5797c4043b7f344926bd7a77690c64cf2ecdc2349aa5759028315ca2b58a9846d2a3ba8c9ba4108afeeced26ef6a1e0d37114e22e610b95931c340ff7fd03ac31c65abf1e7bee8bf7df9fe83f33fce19a3b61aa76b3756430e17892daae265e446c8a73fa3a2b60aa6a6aba8e9ac9b6a5a3e1883d437645c98afa0bdfc5fe0549a219d76aa5d5332642b0698e78b3247ca3bf1df7557945705d548c4c0b5cc6052004068ffa573e1a9e9a7f3e7312950120f14c7f51ed6d306b7366bb4514bd05ab9ac1925a799ba010a1d2204204f10f33809d9cabd315cd5ac8c2896dd7e2c49b0f2a3de9a01df08b38dcd2aea57ac5ae07d6b01388219b5c3517573607d688d2d7ee71b84fcc01ee99c01e1d62d83c6d7750d9a7ce4a22e439d00f96d83a6bc0682a3fb219aba172b5b74b8070eb61b40c0e252c81113887aa4720b5e618959ccdbc59dd74a50d68f614f052192eceac39a53873e2b7440bbeaa9ec45712026e4ada7ccf8ee8f771d36e0343c0f5d71ded04e7ea29f12c06370b45553db1354a445f5a61a8c0ee78d5af471e45b776b32aaf3079eb7ee1362e147ab26c60000cd9de3d394d2eb1e26161113c7687353dd8c8474b0fd7ce7577bf406479bcd63378467da14d9aa6d06b3a0e576ccfbbde0e05454a2916c1b013e090005f7139d15a13f3a4cfa9ed29cd29c9c299190a22707ae8a7ae0f292c48315dcbbff317cc04cf25d4edeced9cd652deaf389d37475c512ee48d347ce0f1dd32b87b51e01fdb82a6f6c0772ce5340389a14ae47ac379a299fb8518941592483a7f255b59eb5a1d7c5b0baffc9236a9a820dadd446682221d67ca872e9e9d84cce45d792070e57f063d720c49ad8465f678a1e52fe92db8bfbed9ddc7f5ab85ced7f9bc1d0edb37b0a67fe742233bfd66d593a3d661580743664f02f1d4075b218cfc76158d3e7f02143bf36109b4695b3b49b20b18eefcff7639212fb51156502a07e1a15796767402f6c916125cc9ec9b153bbd04ad0df73d52ca0f6a37e72447d17d84d7f830611ba69c00cff6e396b437497790749f843c4494d498d05cca04e0815df0e038258260fc5c725352e872be922366353ad3d43b28310d3f034354671f94329d5ed59866e0c86bed7c5c2a35235d8abfd072e0fbfd19ae986780bd018e12c4ba7671af0364b2c9dc07a62e5ba80be24a7ab82358d718dff535255d241873c88883bc1a1a1647241ea5f72c0a290e6b8418aba479570929f79787b006226542172b84d2d9789ea939abffdbcf96cfedbb2b8bd72ce0f639aa1eda505c1bfd48dd9c05d307e994f018627e566166b670c7742d984f3a96c09f1991b9addd786411dbe0d50b2a1c721471d3f40bb5b58\n      \n      \n        \n          \n          \n            请输入小羊的口令：\n          \n        \n        \n      \n    \n    "}]